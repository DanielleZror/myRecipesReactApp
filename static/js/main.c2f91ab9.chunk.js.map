{"version":3,"sources":["logo.png","food1.jpg","components/Card.js","components/CardsList.js","components/Search.js","components/allRecipesPage.js","components/addRecipePage.js","components/homePage.js","components/Navbar.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","console","log","oneRecipe","className","style","backgroundImage","Img","Name","Description","CardsList","recipes","map","key","_id","Search","type","placeholder","onChange","allRecipesPage","OnChangeSearch","searchValue","target","value","setState","searchField","state","axios","get","then","res","data","this","filteredRecipes","filter","recipe","toLowerCase","includes","React","Component","addRecipePage","MyNavbar","expand","Brand","as","Link","to","id","src","logo","width","height","alt","Toggle","aria-controls","Collapse","Nav","href","Form","inline","FormControl","exact","path","component","Home","All","Add","render","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c2f91ab9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ccb1f312.png\";","module.exports = __webpack_public_path__ + \"static/media/food1.a4c4175d.jpg\";","import React from 'react';\r\nimport '../styles/Card.css';\r\nimport photo from '../food1.jpg';\r\n\r\nconst Card = (props) => {\r\n    console.log('card', props.oneRecipe)\r\n    \r\n    return (\r\n            <div className='cardStyle '>\r\n                <div className=\"card-img\" style={{backgroundImage:`url(${props.oneRecipe.Img})`}}>\r\n                    <div className=\"overlay\">\r\n                        <div className=\"overlay-content\">\r\n                            <a className=\"hover\" > View</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h3>{props.oneRecipe.Name}</h3>\r\n                <h5>{props.oneRecipe.Description}</h5>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\nimport '../styles/CardsList.css';\r\n\r\nconst CardsList = (props) => {\r\n  console.log('list',props.recipes)\r\n    return (        \r\n            <div className='container'>\r\n              {props.recipes.map((oneRecipe) => <Card key={oneRecipe._id} oneRecipe={oneRecipe}/>) }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default CardsList;","import React from 'react';\r\nimport '../styles/SearchBox.css'\r\n\r\nconst Search = (props) => {\r\n  \r\n    return (\r\n       \r\n        <div className=\"center mr-sm-2\">\r\n            <input \r\n                type=\"search\"\r\n                placeholder=\"search your recipes\"\r\n                onChange={props.onChange}/> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Search;","import React from 'react';\r\nimport '../styles/App.css';\r\nimport CardsList from './CardsList.js'\r\nimport axios from 'axios';\r\nimport Search from './Search.js';\r\n\r\n\r\n\r\nexport default class allRecipesPage extends React.Component  {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      recipes: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    axios.get(`/api/all`)\r\n      .then(res => {\r\n        const recipes = res.data;\r\n        this.setState({ recipes });\r\n      })\r\n  }\r\n\r\n   OnChangeSearch = (searchValue) => {\r\n    console.log(searchValue.target.value)\r\n    this.setState({searchField: searchValue.target.value})\r\n  }\r\n\r\n  render() {\r\n    const { recipes, searchField } = this.state;\r\n    console.log('reder', recipes)\r\n    const filteredRecipes = recipes.filter((recipe) =>{\r\n      return (recipe.Name.toLowerCase().includes(searchField.toLowerCase()))\r\n    })\r\n    return (\r\n      <div >\r\n        <header >\r\n        <Search onChange = {this.OnChangeSearch}/>\r\n        <CardsList recipes ={filteredRecipes} />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst addRecipePage = () => {\r\n\r\n    \r\n    return (\r\n            <div >\r\n                <h1>add page</h1>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default addRecipePage;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst addRecipePage = () => {\r\n\r\n    \r\n    return (\r\n            <div >\r\n                <h1>home page</h1>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default addRecipePage;\r\n\r\n","import React from 'react';\r\nimport logo from '../logo.png';\r\nimport '../styles/Navbar.css'\r\nimport { Switch, Route, Link, withRouter } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport All from './allRecipesPage'\r\nimport Add from './addRecipePage'\r\nimport Home from './homePage'\r\n\r\nconst MyNavbar = () => {\r\n    return (\r\n        <Route>\r\n            <div>\r\n                <Navbar className=\"Navbar navbar-dark\" expand=\"lg\">\r\n                    <Navbar.Brand as={Link} to=\"/\">\r\n                            <img id=\"icon\" src={logo} width=\"50px\" height=\"50px\" alt=\"\" />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                            <Nav.Link as={Link} to=\"/all\" >All</Nav.Link>\r\n                            <Nav.Link as={Link} to=\"/add\">Add</Nav.Link>\r\n                            <Nav.Link href=\"#saved\">Saved</Nav.Link>\r\n                        </Nav> \r\n                        <Form inline>\r\n                            <FormControl id=\"searchInput\" type=\"text\" placeholder=\"Search in all recipes\" className=\"mr-sm-2 submit_on_enter\" />\r\n                            <a id=\"userName\" className=\"nav-link disabled\">danielle</a>\r\n                        </Form>\r\n                    </Navbar.Collapse>  \r\n                </Navbar>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route path='/All' component={All} />     \r\n                    <Route path='/Add' component={Add} />\r\n                    {/* <Route path='/Saved' component={Saved} /> */}\r\n                    <Route render={function () {\r\n                            return <p>Not found</p>\r\n                        }} />\r\n                </Switch>\r\n            </div>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default MyNavbar","import React from 'react';\nimport '../styles/App.css';\nimport Nav from '../components/Navbar';\nimport CardsList from '../components/CardsList'\nimport axios from 'axios';\nimport Search from '../components/Search';\n\n\n\nexport default class App extends React.Component  {\n\n  constructor() {\n    super()\n    this.state = {\n      recipes: [],\n      searchField: ''\n    }\n  }\n  \n\n  componentDidMount() {\n    axios.get(`/api/all`)\n      .then(res => {\n        const recipes = res.data;\n        this.setState({ recipes });\n      })\n  }\n\n   OnChangeSearch = (searchValue) => {\n    console.log(searchValue.target.value)\n    this.setState({searchField: searchValue.target.value})\n  }\n\n  render() {\n    const { recipes, searchField } = this.state;\n    console.log('reder', recipes)\n    const filteredRecipes = recipes.filter((recipe) =>{\n      return (recipe.Name.toLowerCase().includes(searchField.toLowerCase()))\n    })\n    return (\n      <div >\n        <header >\n        <Nav />\n        {/* <Search onChange = {this.OnChangeSearch}/>\n        <CardsList recipes ={filteredRecipes} /> */}\n        </header>\n      </div>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}